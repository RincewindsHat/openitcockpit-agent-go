[default]
  # Use this file to define own custom checks and plugin you want to execute.
  # openITCOCKPIT Monitoring Agent is 100% compatible to the "Monitoring Plugins Development Guidelines"
  # https://www.monitoring-plugins.org/doc/guidelines.html
  # So you can use all monitoring plugins that work with: Naemon, Nagios, Shinken, Icinga 1 and Sensu

[check_whoami]
  command = /usr/bin/whoami
  interval = 60
  timeout = 5
  enabled = false

#[check_users]
   # Run check_users on a Linux, Unix or macOS system
   # The command will net get executed through a shell. If you want to execute something like "cat error.log | grep error | wc -l"
   # you have to create a bash script
#  command = /usr/lib/nagios/plugins/check_users -w 5 -c 10
#  interval = 30
#  timeout = 5
#  enabled = true

#[check_load]
   # Run check_load on a Linux, Unix or macOS system
#  command = /usr/lib/nagios/plugins/check_load -r -w .15,.10,.05 -c .30,.25,.20
#  interval = 60
#  timeout = 5
#  enabled = true

#[check_shell]
   # Run a check script directly via bash on a Linux, Unix or macOS system
#  command = echo hallo welt
#  shell = /bin/bash
#  interval = 60
#  timeout = 5
#  enabled = true

#[check_windows]
   # This example shows the execution of a executable on Windows
   # The command will not executed through a shell.
#  command = C:\example.exe -w 5 -c 10
#  interval = 60
#  timeout = 10
#  enabled = true

#[check_powershell_script]
   # This example shows the execution of a PowerShell Script on Windows
#  command = "C:\example_script.ps1"
#  shell = powershell
#  interval = 60
#  timeout = 10
#  enabled = true

#[check_powershell_command]
   # This example shows the execution of a PowerShell Script on Windows
   # Please note that due to a bug in powershell we have to discard the error output
   # Use a powershell ps1 file if you require the error output
#  command = "Write-Host test"
#  shell = powershell_command
#  interval = 60
#  timeout = 10
#  enabled = true

#[check_vbs]
   # This example shows the execution of a VBS Script on Windows
#  command = "C:\example_script.vbs"
#  shell = vbs
#  interval = 60
#  timeout = 10
#  enabled = true

#[check_bat]
   # This example shows the execution of a bat Script on Windows
#  command = "C:\example_script.bat"
#  shell = bat
#  interval = 60
#  timeout = 10
#  enabled = true
